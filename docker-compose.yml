version: "3"

services:
  # Frontend application (React)
  frontend:
    build:
      context: ./components/frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
      - API_URL=http://api:3000
    depends_on:
      - api
    restart: unless-stopped

  # API service (Node.js/Express)
  api:
    build:
      context: ./components/api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/redstone
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Background worker service
  worker:
    build:
      context: ./components/worker
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/redstone
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # PostgreSQL database
  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=redstone
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  # Redis for caching and message queue
  redis:
    image: redis:7-alpine
    restart: unless-stopped

volumes:
  db-data: