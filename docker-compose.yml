
services:
  # PostgreSQL database for Redmica
  postgres:
    image: postgres:${POSTGRES_VERSION:-15}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: postgres
      POSTGRES_DB: redmica_production
    volumes:
      - ./storage/postgres:/var/lib/postgresql/data
      - ./components/postgres/config:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - redstone-network
    # Labels removed - using Loki external labels instead

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      ldap:
        condition: service_started

  # Redmica - Redmine fork for project management with custom search features
  redmica:
    image: redstone-redmica:custom
    environment:
      REDMINE_DB_DATABASE: redmica_production
      REDMINE_DB_HOST: postgres
      REDMINE_DB_USERNAME: postgres
      REDMINE_DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      REDMINE_DB_ADAPTER: postgresql
      SECRET_KEY_BASE: ${REDMICA_SECRET_KEY_BASE:-changemeinproduction}
      REDMINE_PLUGINS_MIGRATE: 'true'
      REDMINE_API_KEY: ${REDMINE_API_KEY:-changethisinyourenv}
    volumes:
      - ./storage/redmica/files:/usr/src/redmine/files
      - ./storage/redmica/plugins:/usr/src/redmine/plugins
      - ./components/redmica/config:/etc/redmica
      - ./components/redmica/scripts:/scripts
    ports:
      - "${REDMICA_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - redstone-network
    # Labels removed - using Loki external labels instead
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
      
  # Redmica Initialization - Applies trackers and enumerations
  redmica-init:
    image: alpine:latest
    volumes:
      - ./components/redmica/scripts:/scripts
      - ./components/redmica/config:/etc/redmica
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - REDMICA_CONTAINER=redstone-redmica-1
    depends_on:
      redmica:
        condition: service_healthy
    command: ["/bin/sh", "-c", "apk add --no-cache bash docker curl && echo 'Waiting for Redmica to be ready...' && sleep 5 && bash /scripts/initialize_redmica.sh"]
    restart: on-failure
    networks:
      - redstone-network
    # Labels removed - using Loki external labels instead
      
  # LDAP service for authentication (lldap)
  ldap:
    image: lldap/lldap:stable
    volumes:
      - ./storage/ldap/lldap-data:/data
    environment:
      - LLDAP_JWT_SECRET=jwt_secret
      - LLDAP_LDAP_USER_PASS=${LDAP_ADMIN_PASSWORD:-adminadmin}
      - LLDAP_LDAP_BASE_DN=dc=redstone,dc=local
      - LLDAP_LOG_LEVEL=info # Ensuring logs are generated at info level
    ports:
      - "3892:17170" # HTTP API and Web UI (changed host port to avoid conflict)
      - "3890:3890"   # LDAP - Using same port both inside and outside container
    networks:
      - redstone-network
    restart: unless-stopped
    # Labels removed - using Loki external labels instead

    healthcheck:
      test: ["CMD", "nc", "-z", "0.0.0.0", "3890"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-9.5.2}
    volumes:
      - ./storage/grafana:/var/lib/grafana
      - ./components/monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./components/monitoring/grafana/auth/ldap.toml:/etc/grafana/ldap.toml
      - ./components/monitoring/grafana/dashboards:/etc/grafana/dashboards
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_AUTH_LDAP_ENABLED: "true"
      GF_AUTH_LDAP_CONFIG_FILE: "/etc/grafana/ldap.toml"
      GF_AUTH_LDAP_ALLOW_SIGN_UP: "true"
      GF_LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD:-admin}
      GF_PATHS_PROVISIONING: "/etc/grafana/provisioning"
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/etc/grafana/dashboards/system-overview.json"
      GF_LOG_LEVEL: "debug"
    ports:
      - "${GRAFANA_PORT:-3002}:3000"
    networks:
      - redstone-network
    # Labels removed - using Loki external labels instead
    restart: unless-stopped
    depends_on:
      - prometheus

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-v2.44.0}
    volumes:
      - ./storage/prometheus:/prometheus
      - ./components/monitoring/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - redstone-network
    restart: unless-stopped
    # Labels removed - using Loki external labels instead

  # Frontend service has been removed from streamlined deployment

  # API Service has been removed from streamlined deployment

  # Background Worker Service has been removed from streamlined deployment

  # Loki - Log aggregation
  loki:
    image: grafana/loki:${LOKI_VERSION:-2.9.0}
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./storage/loki:/loki
      - ./components/monitoring/loki:/etc/loki
    ports:
      - "${LOKI_PORT:-3100}:3100"
    networks:
      - redstone-network
    restart: unless-stopped
    # Labels removed - using Loki external labels instead
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Fluent Bit removed - using Docker Loki logging driver directly

  # Redis - Cache and message queue
  redis:
    image: redis:${REDIS_VERSION:-7-alpine}
    volumes:
      - ./storage/redis:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - redstone-network
    restart: unless-stopped
    # Labels removed - using Loki external labels instead
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

networks:
  redstone-network:
    driver: bridge

# No longer need named volumes since we're using local directories for persistence